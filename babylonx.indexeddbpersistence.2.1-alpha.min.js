var BABYLONX;(function(n){var t=function(){function n(){}return n.SerializeMesh=function(n){var t=[],i;return n.subMeshes&&(t=n.subMeshes.map(function(n,t){return{position:t,verticesStart:n.verticesStart,verticesCount:n.verticesCount,indexStart:n.indexStart,indexCount:n.indexCount}})),i=n.geometry?n.geometry.id:null,{uniqueId:n.uniqueId,id:n.id,name:n.name,geometryId:i,sphereCenter:n.getBoundingInfo().boundingSphere.centerWorld.asArray(),sphereRadius:n.getBoundingInfo().boundingSphere.radiusWorld,boxMinimum:n.getBoundingInfo().boundingBox.minimumWorld.asArray(),boxMaximum:n.getBoundingInfo().boundingBox.maximumWorld.asArray(),worldMatrixFromCache:n.worldMatrixFromCache.asArray(),subMeshes:t,checkCollisions:n.checkCollisions}},n.SerializeGeometry=function(n){return{id:n.id,positions:n.getVerticesData(BABYLON.VertexBuffer.PositionKind),normals:n.getVerticesData(BABYLON.VertexBuffer.NormalKind),indices:n.getIndices(),uvs:n.getVerticesData(BABYLON.VertexBuffer.UVKind)}},n}(),i;n.BabylonSerialization=t;i=function(){function n(i,r,u){var f=this;r===void 0&&(r="babylonJsMeshes");u===void 0&&(u=!0);this._scene=i;this.processing=!1;this._onMeshAdded=function(n){n.registerAfterWorldMatrixUpdate(f._onMeshUpdated);f._addUpdateList[n.uniqueId]=t.SerializeMesh(n)};this._onMeshRemoved=function(n){f._remvoeList.push(n.uniqueId)};this._onMeshUpdated=function(n){f._addUpdateList[n.uniqueId]=t.SerializeMesh(n)};this._onGeometryAdded=function(n){n.onGeometryUpdated=f._onGeometryUpdated;f._addUpdateListGeometries[n.id]=t.SerializeGeometry(n)};this._onGeometryRemoved=function(n){f._removeListGeometries.push(n.id)};this._onGeometryUpdated=function(n){f._addUpdateListGeometries[n.id]=t.SerializeGeometry(n)};this._processLists=function(){f._indexedDb&&!f.processing&&(f.processing=!0,f._processDatabaseUpdate(function(n,t){if((n.length||t.length)&&f.onDatabaseUpdated)f.onDatabaseUpdated(n,t);f.processing=!1}))};this._processDatabaseUpdate=function(t){var u=f._indexedDb.transaction([n.MESHES_OBJECT_STORE_NAME,n.GEOMETRIES_OBJECT_STORE_NAME],"readwrite"),e=[],o=[],s,h,i,r,c,l;u.oncomplete=function(){t(e,o)};u.onerror=function(n){console.log(n)};s=u.objectStore(n.MESHES_OBJECT_STORE_NAME);h=u.objectStore(n.GEOMETRIES_OBJECT_STORE_NAME);for(i in f._addUpdateList)f._addUpdateList.hasOwnProperty(i)&&(e.push(parseInt(i)),s.put(f._addUpdateList[i],f._addUpdateList[i].uniqueId),delete f._addUpdateList[i]);for(r in f._addUpdateListGeometries)f._addUpdateListGeometries.hasOwnProperty(r)&&(o.push(r),h.put(f._addUpdateListGeometries[r],r),delete f._addUpdateListGeometries[r]);while(f._remvoeList.length)c=f._remvoeList.pop(),e.push(c),s.delete(c);while(f._removeListGeometries.length)l=f._removeListGeometries.pop(),o.push(l),h.delete(l)};this._processMeshesAddedUpdatedBatch=function(t){var r=f._indexedDb.transaction([n.MESHES_OBJECT_STORE_NAME],"readwrite"),u=[],e,i;r.oncomplete=function(){t(u)};r.onerror=function(n){console.log(n)};e=r.objectStore(n.MESHES_OBJECT_STORE_NAME);for(i in f._addUpdateList)f._addUpdateList.hasOwnProperty(i)&&(u.push(parseInt(i)),e.put(f._addUpdateList[i],f._addUpdateList[i].uniqueId),delete f._addUpdateList[i])};this._processMeshAddedUpdated=function(t){var i,r;console.time(""+t.uniqueId);i=f._indexedDb.transaction([n.MESHES_OBJECT_STORE_NAME],"readwrite");i.oncomplete=function(){console.timeEnd(""+t.uniqueId)};i.onerror=function(n){console.log(n)};r=i.objectStore(n.MESHES_OBJECT_STORE_NAME);r.put(t,t.uniqueId)};this._processMeshRemoved=function(t){var i=f._indexedDb.transaction([n.MESHES_OBJECT_STORE_NAME],"readwrite"),r;i.oncomplete=function(){};i.onerror=function(n){console.log(n)};r=i.objectStore(n.MESHES_OBJECT_STORE_NAME);r.delete(t)};this.processGeometryAddedUpdated=function(t){var i=f._indexedDb.transaction([n.GEOMETRIES_OBJECT_STORE_NAME],"readwrite"),r;i.oncomplete=function(){};i.onerror=function(n){console.log(n)};r=i.objectStore(n.GEOMETRIES_OBJECT_STORE_NAME);r.put(t,t.id)};this._processGeometryRemoved=function(t){var i=f._indexedDb.transaction([n.GEOMETRIES_OBJECT_STORE_NAME],"readwrite"),r;i.oncomplete=function(){};i.onerror=function(n){console.log(n)};r=i.objectStore(n.GEOMETRIES_OBJECT_STORE_NAME);r.delete(t)};this._addUpdateList={};this._addUpdateListGeometries={};this._remvoeList=[];this._removeListGeometries=[];this._openDatabase(r,1,!0,function(n){f._indexedDb=n;f._scene.onNewMeshAdded=f._onMeshAdded;f._scene.onMeshRemoved=f._onMeshRemoved;f._scene.onGeometryAdded=f._onGeometryAdded;f._scene.onGeometryRemoved=f._onGeometryRemoved;f._scene.registerAfterRender(f._processLists);u&&setTimeout(function(){f._scene.meshes.forEach(function(n){f._onMeshAdded(n)});f._scene.getGeometries().forEach(function(n){f._onGeometryAdded(n)})})})}return n.prototype._openDatabase=function(t,i,r,u){r&&indexedDB.deleteDatabase(t);var f=indexedDB.open(t,i);f.onerror=function(n){console.log(n)};f.onsuccess=function(){var n=event.target.result;u(n)};f.onupgradeneeded=function(t){var i=t.target.result,u=i.createObjectStore(n.MESHES_OBJECT_STORE_NAME),r;u.createIndex("uniqueId","uniqueId",{unique:!0});r=i.createObjectStore(n.GEOMETRIES_OBJECT_STORE_NAME);r.createIndex("id","id",{unique:!0})}},n.prototype.countMeshes=function(t){var i;if(this._indexedDb){i=this._indexedDb.transaction([n.MESHES_OBJECT_STORE_NAME],"readonly");i.onerror=function(n){console.log(n)};var u=i.objectStore(n.MESHES_OBJECT_STORE_NAME),f=u.index("uniqueId"),r=f.count();r.onsuccess=function(){t(r.result)}}},n.prototype.getAllMeshes=function(t){var r=this._indexedDb.transaction([n.MESHES_OBJECT_STORE_NAME]),f=r.objectStore(n.MESHES_OBJECT_STORE_NAME),u=[],i;r.oncomplete=function(){t(u)};i=f.openCursor();i.onerror=function(n){console.log(n)};i.onsuccess=function(n){var t=n.target.result;t&&(u.push(t.value),t.continue())}},n.MESHES_OBJECT_STORE_NAME="meshes",n.GEOMETRIES_OBJECT_STORE_NAME="geometries",n}();n.IndexedDBPersist=i})(BABYLONX||(BABYLONX={}));
//# sourceMappingURL=babylonx.indexeddbpersistence.2.1-alpha.min.js.map
